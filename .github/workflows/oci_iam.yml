name: OCI Deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "dev" branch
  push:
    branches: [ "main","dev" ]

jobs:
  get-ocir-repository-test:
    runs-on: ubuntu-latest
    name: Invoke OCI Deployment on to OKE .
    env:
      OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
      OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
      OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
      OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}

    steps:
      - name: Get or create an OCIR Repository
        uses: oracle-actions/get-ocir-repository@v1.0
        id: get-ocir-repository
        with:
          name: python_fastapi_app
          compartment: ${{ secrets.OCI_COMPARTMENT_OCID }}

      - name: Log into OCIR
        uses: oracle-actions/login-ocir@v1.0
        id: login-ocir
        with:
          auth_token: ${{ secrets.OCI_AUTH_TOKEN }}

      - name: Check out code
        uses: actions/checkout@v2

      - name: Tag and push a container image
        id: tag-and-push-image
        run: |
          ls -ltr
          docker build -t "${{ steps.get-ocir-repository.outputs.repo_path }}:${{github.run_number}}" .
          docker push "${{ steps.get-ocir-repository.outputs.repo_path }}:${{github.run_number}}"
          echo '{ "items": [ { "name": "namespace", "value": "ns-github" }, { "name": "image_tag", "value": "'${{github.run_number}}'" } ] }' >deployarguments.json
          echo '${{env.OCI_DEPLOYMENT_ID}}'

      - name: Invoke deployment pipeline
        uses: oracle-actions/run-oci-cli-command@v1.0
        id: invoke-deployments
        with:
          command: '''devops deployment create-pipeline-deployment --pipeline-id ${{secrets.DEPLOYMENT_PIPELINE_OCID }}'''
          # --deployment-arguments file:///deployarguments.json'

      - name: Output of deploy request.
        run: |
          echo ${{ steps.invoke-deployments.outputs.output }} | jq .
